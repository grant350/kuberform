name: kuberform

on:
  push:
    branches:
      - main
      - versionControl
jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - name: Hello world action step
        id: hello
        uses: grant350/get_latest_merged_pull_request_labels@v1.1
        with:
          owner: ${{github.actor}}
          repo: ${{github.repository}}
          token: ${{github.token}}
      - name: Get the output time from the action
        run: echo "JUST CHECKING"

  buildKuberform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.12.0']

    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: list files in workflow
      run: cd /home/runner/work/kuberform/kuberform/.github/workflows; ls

    # https://api.github.com/search/issues\?q\=repo:{repo_owner}/{repo}+is:pr+is:merged

    #  uses custom action

    - name: See if patch label exists
      if: contains(github.event.push.labels.*.name,'patch')
      run: echo "VersionType=patch" >> $GITHUB_ENV

    - name: See if minor label exists
      if: contains(github.event.push.labels.*.name,'minor')
      run: echo "VersionType=minor" >> $GITHUB_ENV

    - name: See if major label exists
      if: contains(github.event.push.labels.*.name,'major')
      run: echo "VersionType=major" >> $GITHUB_ENV

    - name: Throw error if VersionType is empty
      if: "${{ env.VersionType == '' }}"
      run: echo "Error!"; exit 125

    # - name: add patch
    #   working-directory: /home/runner/work/kuberform/kuberform
    #   run: |
    #       npm version ${{ env.VersionType}}; \
    #       git config user.name 'grant350'; \
    #       git config user.email github-actions@github.com; \
    #       git add .; \
    #       git commit -m "version controll ${{ env.VersionType}}"; \
    #       git push


    #   if pr is merged get the label from the merged pr and find a way to update the main branch

    # - name: install app-src modules
    #   working-directory: /home/runner/work/kuberform/kuberform/app-src
    #   run: npm install

    # - name: install root modules
    #   working-directory: /home/runner/work/kuberform/kuberform
    #   run: npm install

    # - name: test the code
    #   working-directory: /home/runner/work/kuberform/kuberform/app-src
    #   run: npm test

    # - name: check Linting
    #   working-directory: /home/runner/work/kuberform/kuberform/app-src
    #   run: npm run linter

    # - name: build
    #   working-directory: /home/runner/work/kuberform/kuberform/app-src
    #   run: npm run build

    # - name: rollup kuberform
    #   working-directory: /home/runner/work/kuberform/kuberform
    #   run: npm run rollup
    #   # npm version patch, minor, major


    # pulls: {
    #   checkIfMerged: